{"version":3,"sources":["components/body.js","components/header.js","components/coords.js","index.js"],"names":["Body","props","react_default","a","createElement","children","Header","Coords","state","coords","vremea","getCoords","navigator","geolocation","getCurrentPosition","position","_this","setState","lat","latitude","lon","longitude","displayCoords","concat","logMe","options","method","headers","Content-Type","body","JSON","stringify","console","log","fetch","then","response","json","this","type","onClick","Component","ReactDOM","render","header","document","getElementById"],"mappings":"oIAUeA,EARF,SAACC,GACZ,OACEC,EAAAC,EAAAC,cAAA,WACCH,EAAMI,WCKIC,EARA,WACb,OACEJ,EAAAC,EAAAC,cAAA,4DCqDWG,6MAtDbC,MAAQ,CACNC,OAAQ,GACRC,OAAQ,MAGVC,UAAY,WACVC,UAAUC,YAAYC,mBAAmB,SAACC,GACxCC,EAAKC,SAAS,CACZR,OAAQ,CACNS,IAAKH,EAASN,OAAOU,SACrBC,IAAKL,EAASN,OAAOY,kBAM7BC,cAAgB,WAGd,MAAI,gBAAiBV,WACnBI,EAAKL,YACL,IAAAY,OAAWP,EAAKR,MAAMC,OAAOS,IAA7B,MAAAK,OAAqCP,EAAKR,MAAMC,OAAOW,MAGvD,8BAIJI,MAAQ,WACN,IAAIf,EAASO,EAAKR,MAAMC,OAClBgB,EAAU,CACdC,OAAQ,OACRC,QAAS,CACPC,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUtB,IAEvBuB,QAAQC,IAAIxB,GACZyB,MAAK,mCAAqCT,GACvCU,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAzB,GAAM,OAAIM,EAAKC,SAAS,CAACP,sFAIjC,OACER,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,oBAAYkC,KAAKhB,iBACjBpB,EAAAC,EAAAC,cAAA,oBAAYkC,KAAK9B,MAAME,QACvBR,EAAAC,EAAAC,cAAA,UAAQmC,KAAK,SAASC,QAASF,KAAKd,OAApC,kBAjDaiB,aCerBC,IAASC,OAAOzC,EAAAC,EAAAC,cATJ,WACV,OACEF,EAAAC,EAAAC,cAACyB,EAAD,KACE3B,EAAAC,EAAAC,cAACwC,EAAD,MACA1C,EAAAC,EAAAC,cAACK,EAAD,QAKU,MAASoC,SAASC,eAAe","file":"static/js/main.41927318.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Body = (props) => {\r\n  return (\r\n    <div>\r\n    {props.children}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Body;","import React from 'react';\r\n\r\nconst Header = () => {\r\n  return ( \r\n    <h1>\r\n      WeatherApp\r\n    </h1>\r\n   );\r\n}\r\n \r\nexport default Header;","import React, { Component } from 'react';\r\n\r\nclass Coords extends Component {\r\n  state = {\r\n    coords: {},\r\n    vremea: ''\r\n  }\r\n\r\n  getCoords = () => {\r\n    navigator.geolocation.getCurrentPosition((position) => {\r\n      this.setState({\r\n        coords: {\r\n          lat: position.coords.latitude,\r\n          lon: position.coords.longitude\r\n        }\r\n      })\r\n    })\r\n  }\r\n\r\n  displayCoords = () => {\r\n\r\n\r\n    if (\"geolocation\" in navigator) {\r\n      this.getCoords();\r\n      return ` ${this.state.coords.lat}, ${this.state.coords.lon}`;\r\n    }\r\n    else {\r\n      return ` Geolocation is disabled`;\r\n    }\r\n  }\r\n\r\n  logMe = () => {\r\n    let coords = this.state.coords;\r\n    const options = {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(coords)\r\n    }\r\n    console.log(coords);\r\n    fetch(`http://localhost:3001/api/coords`, options)\r\n      .then(response => response.json())\r\n      .then(vremea => this.setState({vremea}));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <p>Coords: {this.displayCoords()}</p>\r\n        <p>Vremea: {this.state.vremea}</p>\r\n        <button type=\"submit\" onClick={this.logMe}>Submit</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Coords;\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport Body from './components/body.js'\nimport Header from './components/header.js';\nimport Coords from './components/coords.js'\n\n\nconst App = () => {\n  return (\n    <Body>\n      <Header />\n      <Coords />\n    </Body>\n  )\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}