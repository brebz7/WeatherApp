{"version":3,"sources":["components/coords.module.css","components/body.js","components/header.js","components/weatherInformation.js","components/coords.js","index.js"],"names":["module","exports","coordsText","weatherText","Body","props","react_default","a","createElement","children","useStyles","makeStyles","root","flexGrow","SimpleAppBar","classes","className","AppBar","position","color","Toolbar","Typography","variant","WeatherInformation","styles","data","currently","summary","time","temperature","toFixed","humidity","pressure","visibility","windSpeed","Coords","state","coords","infoReceived","infoWeather","getCoords","navigator","geolocation","getCurrentPosition","_this","setState","lat","latitude","lon","longitude","displayCoords","concat","bringWeatherData","options","method","headers","Content-Type","body","JSON","stringify","fetch","then","response","json","this","weatherInformation","Button","onClick","Component","ReactDOM","render","document","getElementById"],"mappings":"4EACAA,EAAAC,QAAA,CAAkBC,WAAA,2BAAAC,YAAA,8ICSHC,EARF,SAACC,GACZ,OACEC,EAAAC,EAAAC,cAAA,WACCH,EAAMI,2CCCLC,EAAYC,YAAW,CAC3BC,KAAM,CACJC,SAAU,KAIC,SAASC,IACtB,IAAMC,EAAUL,IAEhB,OACEJ,EAAAC,EAAAC,cAAA,OAAKQ,UAAWD,EAAQH,MACtBN,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAQC,SAAS,SAASC,MAAM,WAC9Bb,EAAAC,EAAAC,cAACY,EAAA,EAAD,KACEd,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAYC,QAAQ,KAAKH,MAAM,WAA/B,uFCaKI,EA7BY,SAAClB,GAC1B,OACEC,EAAAC,EAAAC,cAAA,OAAKQ,UAAWQ,IAAOrB,aACrBG,EAAAC,EAAAC,cAAA,6BACoBH,EAAMoB,KAAKC,UAAUC,SAEzCrB,EAAAC,EAAAC,cAAA,kBACSH,EAAMoB,KAAKC,UAAUE,MAE9BtB,EAAAC,EAAAC,cAAA,yBACgBH,EAAMoB,KAAKC,UAAUG,YADrC,WAE8C,GAAzCxB,EAAMoB,KAAKC,UAAUG,YAAc,IAAQ,GAAGC,QAAQ,GAF3D,SAIAxB,EAAAC,EAAAC,cAAA,sBACaH,EAAMoB,KAAKC,UAAUK,UAElCzB,EAAAC,EAAAC,cAAA,sBACaH,EAAMoB,KAAKC,UAAUM,UAElC1B,EAAAC,EAAAC,cAAA,wBACeH,EAAMoB,KAAKC,UAAUO,YAEpC3B,EAAAC,EAAAC,cAAA,uBACcH,EAAMoB,KAAKC,UAAUQ,aCqE1BC,6MAxFbC,MAAQ,CACNC,OAAQ,GACRC,cAAc,EACdC,YAAa,MAGfC,UAAY,WACVC,UAAUC,YAAYC,mBAAmB,SAACzB,GACxC0B,EAAKC,SAAS,CACZR,OAAQ,CACNS,IAAK5B,EAASmB,OAAOU,SACrBC,IAAK9B,EAASmB,OAAOY,kBAM7BC,cAAgB,WAGd,MAAI,gBAAiBT,WACnBG,EAAKJ,YACL,IAAAW,OAAWP,EAAKR,MAAMC,OAAOS,IAA7B,MAAAK,OAAqCP,EAAKR,MAAMC,OAAOW,MAGvD,8BAIJI,iBAAmB,WACjB,IAAIf,EAASO,EAAKR,MAAMC,OAClBgB,EAAU,CACdC,OAAQ,OACRC,QAAS,CACPC,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUtB,IAGvBuB,MAAK,cAAgBP,GAClBQ,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAtB,GACJK,EAAKC,SAAS,CAAEP,cAAc,EAAMC,2FAMxC,OAAKyB,KAAK5B,MAAME,aAYZhC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,KAAGQ,UAAWQ,IAAOtB,YAArB,WACW8D,KAAKd,iBAKhB5C,EAAAC,EAAAC,cAACyD,EAAD,CAAoBxC,KAAMuC,KAAK5B,MAAMG,cACrCjC,EAAAC,EAAAC,cAAC0D,EAAA,EAAD,CAAQ5C,QAAQ,YAAYH,MAAM,UAAUgD,QAASH,KAAKZ,kBAA1D,qBAlBF9C,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,KAAGQ,UAAWQ,IAAOtB,YAArB,WACW8D,KAAKd,iBAEhB5C,EAAAC,EAAAC,cAAC0D,EAAA,EAAD,CAAQ5C,QAAQ,YAAYH,MAAM,UAAUgD,QAASH,KAAKZ,kBAA1D,4BAvDWgB,aCWrBC,IAASC,OAAOhE,EAAAC,EAAAC,cATJ,WACV,OACEF,EAAAC,EAAAC,cAACiD,EAAD,KACEnD,EAAAC,EAAAC,cAACM,EAAD,MACAR,EAAAC,EAAAC,cAAC6B,EAAD,QAKU,MAASkC,SAASC,eAAe","file":"static/js/main.94ee7433.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"coordsText\":\"coords_coordsText__2fHLl\",\"weatherText\":\"coords_weatherText__3ABrO\"};","import React from 'react';\r\n\r\nconst Body = (props) => {\r\n  return (\r\n    <div>\r\n    {props.children}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Body;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n});\r\n\r\nexport default function SimpleAppBar() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" color=\"primary\">\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" color=\"inherit\">\r\n            Weather App\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport styles from './coords.module.css';\r\n\r\nconst WeatherInformation = (props) => {\r\n  return (\r\n    <div className={styles.weatherText}>\r\n      <p>\r\n        Weather Summary: {props.data.currently.summary}\r\n      </p>\r\n      <p>\r\n        Time: {props.data.currently.time}\r\n      </p>\r\n      <p>\r\n        Temperature: {props.data.currently.temperature}°F / \r\n        {((props.data.currently.temperature - 32) * 5/9).toFixed(2)}°C\r\n      </p>\r\n      <p>\r\n        Humidity: {props.data.currently.humidity}\r\n      </p>\r\n      <p>\r\n        Pressure: {props.data.currently.pressure}\r\n      </p>\r\n      <p>\r\n        Visibility: {props.data.currently.visibility}\r\n      </p>\r\n      <p>\r\n        Windspeed: {props.data.currently.windSpeed}\r\n      </p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default WeatherInformation;","import React, { Component } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport styles from './coords.module.css'\r\n\r\nimport WeatherInformation from './weatherInformation';\r\n\r\nclass Coords extends Component {\r\n  state = {\r\n    coords: {},\r\n    infoReceived: false,\r\n    infoWeather: ''\r\n  }\r\n\r\n  getCoords = () => {\r\n    navigator.geolocation.getCurrentPosition((position) => {\r\n      this.setState({\r\n        coords: {\r\n          lat: position.coords.latitude,\r\n          lon: position.coords.longitude\r\n        }\r\n      })\r\n    })\r\n  }\r\n\r\n  displayCoords = () => {\r\n\r\n\r\n    if (\"geolocation\" in navigator) {\r\n      this.getCoords();\r\n      return ` ${this.state.coords.lat}, ${this.state.coords.lon}`;\r\n    }\r\n    else {\r\n      return ` Geolocation is disabled`;\r\n    }\r\n  }\r\n\r\n  bringWeatherData = () => {\r\n    let coords = this.state.coords;\r\n    const options = {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(coords)\r\n    }\r\n\r\n    fetch(`/api/coords`, options)\r\n      .then(response => response.json())\r\n      .then(infoWeather => {\r\n        this.setState({ infoReceived: true, infoWeather })\r\n      }\r\n      );\r\n  }\r\n\r\n  render() {\r\n    if (!this.state.infoReceived) {\r\n      return (\r\n        <div>\r\n          <p className={styles.coordsText}>\r\n            Coords: {this.displayCoords()}\r\n          </p>\r\n          <Button variant=\"contained\" color=\"primary\" onClick={this.bringWeatherData}>Get Weather Info</Button>\r\n        </div>\r\n      )\r\n    }\r\n    else {\r\n      return (\r\n        <div>\r\n          <p className={styles.coordsText}>\r\n            Coords: {this.displayCoords()}\r\n          </p>\r\n          {/* <p className={styles.weatherText}>\r\n            Weather: {this.state.infoWeather.currently.summary}\r\n          </p> */}\r\n          <WeatherInformation data={this.state.infoWeather}/>\r\n          <Button variant=\"contained\" color=\"primary\" onClick={this.bringWeatherData}>Get Weather Info</Button>\r\n        </div>\r\n      )\r\n\r\n    }\r\n    // return (\r\n    //   <div>\r\n    //     <p className={styles.coordsText}>\r\n    //       Coords: {this.displayCoords()}\r\n    //     </p>\r\n    //     <p className={styles.weatherText}>\r\n    //       Weather: {this.state.infoWeather ? this.state.infoWeather.currently.summary : ''}\r\n    //     </p>\r\n\r\n    //     <Button variant=\"contained\" color=\"primary\" onClick={this.bringWeatherData}>Get Weather Info</Button>\r\n    //   </div>\r\n    // );\r\n  }\r\n}\r\n\r\nexport default Coords;\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport Body from './components/body.js'\nimport Header from './components/header.js';\nimport Coords from './components/coords.js'\n\n\nconst App = () => {\n  return (\n    <Body>\n      <Header />\n      <Coords />\n    </Body>\n  )\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}