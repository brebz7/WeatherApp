{"version":3,"sources":["components/body.js","components/header.js","components/coords.js","index.js"],"names":["Body","props","react_default","a","createElement","children","Header","Coords","state","coords","getCoords","navigator","geolocation","getCurrentPosition","position","_this","setState","lat","latitude","lon","longitude","err","console","warn","concat","code","message","enableHighAccuracy","timeout","maximumAge","displayCoords","this","Component","ReactDOM","render","body","header","document","getElementById"],"mappings":"oIAUeA,EARF,SAACC,GACZ,OACEC,EAAAC,EAAAC,cAAA,WACCH,EAAMI,WCKIC,EARA,WACb,OACEJ,EAAAC,EAAAC,cAAA,4DC8CWG,6MA/CbC,MAAQ,CACNC,OAAQ,MAGVC,UAAY,WAWVC,UAAUC,YAAYC,mBAAmB,SAACC,GACxCC,EAAKC,SAAS,CACZP,OAAQ,CACNQ,IAAKH,EAASL,OAAOS,SACrBC,IAAKL,EAASL,OAAOW,cAR3B,SAAeC,GACbC,QAAQC,KAAR,SAAAC,OAAsBH,EAAII,KAA1B,OAAAD,OAAoCH,EAAIK,WAP5B,CACZC,oBAAoB,EACpBC,QAAS,IACTC,WAAY,OAiBhBC,cAAgB,WAGd,MAAI,gBAAiBnB,WACnBI,EAAKL,YACL,IAAAc,OAAWT,EAAKP,MAAMC,OAAOQ,IAA7B,MAAAO,OAAqCT,EAAKP,MAAMC,OAAOU,MAGvD,oGAMF,OACEjB,EAAAC,EAAAC,cAAA,qBACU2B,KAAKD,wBA1CAE,aCerBC,IAASC,OAAOhC,EAAAC,EAAAC,cATJ,WACV,OACEF,EAAAC,EAAAC,cAAC+B,EAAD,KACEjC,EAAAC,EAAAC,cAACgC,EAAD,MACAlC,EAAAC,EAAAC,cAACK,EAAD,QAKU,MAAS4B,SAASC,eAAe","file":"static/js/main.2e5a0bfe.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Body = (props) => {\r\n  return (\r\n    <div>\r\n    {props.children}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Body;","import React from 'react';\r\n\r\nconst Header = () => {\r\n  return ( \r\n    <h1>\r\n      WeatherApp\r\n    </h1>\r\n   );\r\n}\r\n \r\nexport default Header;","import React, { Component } from 'react';\r\n\r\nclass Coords extends Component {\r\n  state = {\r\n    coords: {}\r\n  }\r\n\r\n  getCoords = () => {\r\n    let options = {\r\n      enableHighAccuracy: true,\r\n      timeout: 5000,\r\n      maximumAge: 0\r\n    };\r\n\r\n    function error(err) {\r\n      console.warn(`ERROR(${err.code}): ${err.message}`)\r\n    }\r\n\r\n    navigator.geolocation.getCurrentPosition((position) => {\r\n      this.setState({\r\n        coords: {\r\n          lat: position.coords.latitude,\r\n          lon: position.coords.longitude\r\n        }\r\n      })\r\n    }, error, options)\r\n  }\r\n\r\n  displayCoords = () => {\r\n\r\n\r\n    if (\"geolocation\" in navigator) {\r\n      this.getCoords();\r\n      return ` ${this.state.coords.lat}, ${this.state.coords.lon}`;\r\n    }\r\n    else {\r\n      return ` Geolocation is disabled`;\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        Coords:{this.displayCoords()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Coords;\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport Body from './components/body.js'\nimport Header from './components/header.js';\nimport Coords from './components/coords.js'\n\n\nconst App = () => {\n  return (\n    <Body>\n      <Header />\n      <Coords />\n    </Body>\n  )\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}