{"version":3,"sources":["components/comps.module.css","components/header.js","components/weatherInformation.js","components/hourlyWeatherInformation.js","components/coords.js","index.js"],"names":["module","exports","coordsText","weatherText","useStyles","makeStyles","root","flexGrow","SimpleAppBar","classes","react_default","a","createElement","className","AppBar","position","color","Toolbar","Typography","variant","WeatherInformation","props","styles","data","currently","summary","time","temperature","toFixed","humidity","pressure","visibility","windSpeed","theme","width","marginTop","spacing","overflowX","table","minWidth","HourlyWeatherInformation","rows","i","push","hourly","Paper","Table","TableBody","TableRow","map","row","TableCell","Coords","state","coords","infoReceived","infoWeather","getCoords","navigator","geolocation","getCurrentPosition","_this","setState","lat","latitude","lon","longitude","displayCoords","concat","bringWeatherData","options","method","headers","Content-Type","body","JSON","stringify","fetch","then","response","json","console","log","this","weatherInformation","Box","mb","hourlyWeatherInformation","horizontalScrollBarStyle","Button","onClick","Component","ReactDOM","render","Container","maxWidth","document","getElementById"],"mappings":"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","file":"static/js/main.a7e38786.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"coordsText\":\"comps_coordsText__3HJVo\",\"weatherText\":\"comps_weatherText__2qWnx\"};","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n});\r\n\r\nexport default function SimpleAppBar() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" color=\"primary\">\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" color=\"inherit\">\r\n            Weather App\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport styles from './comps.module.css';\r\n\r\nconst WeatherInformation = (props) => {\r\n  return (\r\n    <div className={styles.weatherText}>\r\n      <p>\r\n        Weather Summary: {props.data.currently.summary}\r\n      </p>\r\n      <p>\r\n        Time: {props.data.currently.time}\r\n      </p>\r\n      <p>\r\n        Temperature: {props.data.currently.temperature}°F /\r\n        {((props.data.currently.temperature - 32) * 5 / 9).toFixed(2)}°C\r\n      </p>\r\n      <p>\r\n        Humidity: {props.data.currently.humidity}\r\n      </p>\r\n      <p>\r\n        Pressure: {props.data.currently.pressure}\r\n      </p>\r\n      <p>\r\n        Visibility: {props.data.currently.visibility}\r\n      </p>\r\n      <p>\r\n        Windspeed: {props.data.currently.windSpeed}\r\n      </p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default WeatherInformation;","import React from 'react';\r\nimport styles from './comps.module.css';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(3),\r\n    overflowX: 'auto',\r\n  },\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n}));\r\n\r\nfunction createData(time, temperature) {\r\n  return { time, temperature }\r\n}\r\n\r\n\r\nconst HourlyWeatherInformation = (props) => {\r\n  const rows = [];\r\n  for (let i = 1; i <= 24; i++)\r\n    rows.push(createData(props.data.hourly.data[i].time, props.data.hourly.data[i].temperature));\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <Table className={classes.table}>\r\n        {<TableBody>\r\n          <TableRow>\r\n            {rows.map(row => (\r\n              <TableCell>{row.time}</TableCell>\r\n            ))}\r\n          </TableRow>\r\n          <TableRow>\r\n            {rows.map(row => (\r\n              <TableCell>{row.temperature}</TableCell>\r\n            ))}\r\n          </TableRow>\r\n        </TableBody>}\r\n\r\n      </Table>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default HourlyWeatherInformation;","import React, { Component } from 'react';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport styles from './comps.module.css';\r\nimport horizontalScrollBarStyle from './horizontalScrollBar.module.css';\r\n\r\nimport WeatherInformation from './weatherInformation';\r\nimport HourlyWeatherInformation from './hourlyWeatherInformation';\r\n\r\nclass Coords extends Component {\r\n  state = {\r\n    coords: {},\r\n    infoReceived: false,\r\n    infoWeather: ''\r\n  }\r\n\r\n  getCoords = () => {\r\n    navigator.geolocation.getCurrentPosition((position) => {\r\n      this.setState({\r\n        coords: {\r\n          lat: position.coords.latitude,\r\n          lon: position.coords.longitude\r\n        }\r\n      })\r\n    })\r\n  }\r\n\r\n  displayCoords = () => {\r\n\r\n\r\n    if (\"geolocation\" in navigator) {\r\n      this.getCoords();\r\n      return ` ${this.state.coords.lat}, ${this.state.coords.lon}`;\r\n    }\r\n    else {\r\n      return ` Geolocation is disabled`;\r\n    }\r\n  }\r\n\r\n  bringWeatherData = () => {\r\n    let coords = this.state.coords;\r\n    const options = {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(coords)\r\n    }\r\n\r\n    fetch(`/api/coords`, options)\r\n      .then(response => response.json())\r\n      .then(infoWeather => {\r\n        console.log(infoWeather);\r\n        this.setState({ infoReceived: true, infoWeather })\r\n      }\r\n      );\r\n  }\r\n\r\n  render() {\r\n    if (!this.state.infoReceived) {\r\n      return (\r\n        <div>\r\n          <p className={styles.coordsText}>\r\n            Coords: {this.displayCoords()}\r\n          </p>\r\n          <Button variant=\"contained\" color=\"primary\" onClick={this.bringWeatherData}>Get Weather Info</Button>\r\n        </div>\r\n      )\r\n    }\r\n    else {\r\n      return (\r\n        <div>\r\n          <p className={styles.coordsText}>\r\n            Coords: {this.displayCoords()}\r\n          </p>\r\n          <WeatherInformation data={this.state.infoWeather} />\r\n          <Box mb={2}>\r\n            <HourlyWeatherInformation className={horizontalScrollBarStyle} data={this.state.infoWeather} />\r\n          </Box>\r\n          <Button variant=\"contained\" color=\"primary\" onClick={this.bringWeatherData} mb={2}>Get Weather Info</Button>\r\n\r\n        </div>\r\n      )\r\n\r\n    }\r\n  }\r\n}\r\n\r\nexport default Coords;\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport Header from './components/header.js';\r\nimport Coords from './components/coords.js';\r\n\r\n\r\nimport Container from '@material-ui/core/Container';\r\n\r\n\r\nconst App = () => {\r\n  return (\r\n  <Container maxWidth=\"sm\">\r\n    <Header />\r\n    <Coords />\r\n  </Container>  \r\n  )              \r\n}\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}