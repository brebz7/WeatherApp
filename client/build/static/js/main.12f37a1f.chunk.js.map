{"version":3,"sources":["components/comps.module.css","components/header.js","components/weatherCard.js","components/weatherInformation.js","components/hourlyWeatherInformation.js","components/locationCard.js","components/coords.js","index.js"],"names":["module","exports","coordsText","weatherText","loadingButtonContainer","refreshButtonContainer","useStyles","makeStyles","root","flexGrow","typography","alignItems","SimpleAppBar","classes","react_default","a","createElement","className","AppBar","position","color","Toolbar","Typography","variant","align","card","flex","title","fontSize","pos","marginBottom","WeatherCard","props","Card","CardContent","gutterBottom","component","data","WeatherInformation","Box","Grid","container","spacing","item","md","xs","currently","summary","concat","temperature","toFixed","pressure","humidity","visibility","windSpeed","theme","width","marginTop","overflowX","table","minWidth","HourlyWeatherInformation","time","rows","i","push","hourly","Paper","Table","TableBody","TableRow","map","row","TableCell","textAlign","LocationCard","Coords","state","coords","infoWeatherReceived","infoWeather","locationAddressReceived","locationAddress","findCoordsAndCallAPIs","navigator","geolocation","getCurrentPosition","_this","setState","lat","latitude","lon","longitude","bringLocationAddress","bringWeatherData","options","method","headers","Content-Type","body","JSON","stringify","fetch","then","response","json","console","log","this","_this2","town","county","weatherInformation","mb","onClick","sliderMouseDown","hourlyWeatherInformation","horizontalScrollBarStyle","styles","Button","Component","ReactDOM","render","Container","maxWidth","document","getElementById"],"mappings":"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","file":"static/js/main.12f37a1f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"coordsText\":\"comps_coordsText__3HJVo\",\"weatherText\":\"comps_weatherText__2qWnx\",\"loadingButtonContainer\":\"comps_loadingButtonContainer__2AK0g\",\"refreshButtonContainer\":\"comps_refreshButtonContainer__gQwlb\"};","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  typography: {\r\n    alignItems: 'center'\r\n  }\r\n});\r\n\r\nexport default function SimpleAppBar() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" color=\"primary\" className={classes.typography}>\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" color=\"inherit\" align=\"center\">\r\n            WEATHER\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles({\r\n  card: {\r\n    flex: 1\r\n  },\r\n  title: {\r\n    fontSize: 14\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n});\r\n\r\nexport default function WeatherCard(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={classes.card}>\r\n      <CardContent>\r\n        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n          {props.title}\r\n        </Typography>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {props.data}\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}","import React from 'react';\r\nimport styles from './comps.module.css';\r\nimport WeatherCard from './weatherCard.js';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nconst WeatherInformation = (props) => {\r\n  return (\r\n    <Box>\r\n      <Grid container spacing={1} >\r\n        <Grid item md={6} xs={12} >\r\n          <WeatherCard\r\n            data={props.data.currently.summary}\r\n            title={'Summary'} />\r\n        </Grid>\r\n        <Grid item md={6} xs={12} >\r\n          <WeatherCard\r\n\r\n            data={`${((props.data.currently.temperature - 32) * 5 / 9).toFixed(2)} Â°C`}\r\n            title={'Temperature'} />\r\n        </Grid>\r\n        <Grid item md={6} xs={12}>\r\n          <WeatherCard\r\n            data={`${props.data.currently.pressure} pHa`}\r\n            title={'Pressure'} />\r\n        </Grid>\r\n        <Grid item md={6} xs={12}>\r\n          <WeatherCard\r\n            data={`${props.data.currently.humidity} %`}\r\n            title={'Humidity'} />\r\n        </Grid>\r\n\r\n        <Grid item md={6} xs={12}>\r\n          <WeatherCard\r\n            data={`${(props.data.currently.visibility * 1.6).toFixed(2)} Km`}\r\n            title={'Visibility'} />\r\n        </Grid>\r\n        <Grid item md={6} xs={12}>\r\n          <WeatherCard\r\n            data={`${(props.data.currently.windSpeed * 1.6).toFixed(2)} Km/h`}\r\n            title={'Wind Speed'} />\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n\r\n  )\r\n}\r\n\r\nexport default WeatherInformation;\r\n","import React from 'react';\r\nimport styles from './comps.module.css';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(3),\r\n    overflowX: 'auto',\r\n  },\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n}));\r\n\r\nfunction createData(time, temperature) {\r\n  return { time, temperature }\r\n}\r\n\r\nconst HourlyWeatherInformation = (props) => {\r\n  const rows = [];\r\n  for (let i = 1; i <= 24; i++)\r\n    rows.push(createData(props.data.hourly.data[i].time, props.data.hourly.data[i].temperature));\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <Table className={classes.table}>\r\n        {<TableBody>\r\n          <TableRow>\r\n            {rows.map(row => (\r\n              <TableCell>{row.time}</TableCell>\r\n            ))}\r\n          </TableRow>\r\n          <TableRow>\r\n            {rows.map(row => (\r\n              <TableCell>{row.temperature}</TableCell>\r\n            ))}\r\n          </TableRow>\r\n        </TableBody>}\r\n\r\n      </Table>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default HourlyWeatherInformation;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles({\r\n  card: {\r\n    flex: 1\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n    textAlign: 'center'\r\n  },\r\n  data: {\r\n    textAlign: 'center'\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n});\r\n\r\nexport default function LocationCard(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={classes.card}>\r\n      <CardContent>\r\n        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n          {props.title}\r\n        </Typography>\r\n        <Typography className={classes.data} variant=\"h5\" component=\"h2\">\r\n          {props.data}\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}","import React, { Component } from 'react';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport styles from './comps.module.css';\r\nimport horizontalScrollBarStyle from './horizontalScrollBar.module.css';\r\n\r\nimport WeatherInformation from './weatherInformation';\r\nimport HourlyWeatherInformation from './hourlyWeatherInformation';\r\nimport LocationCard from './locationCard';\r\n\r\nclass Coords extends Component {\r\n  state = {\r\n    coords: {},\r\n    infoWeatherReceived: false,\r\n    infoWeather: '',\r\n    locationAddressReceived: false,\r\n    locationAddress: ''\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.findCoordsAndCallAPIs();\r\n  }\r\n\r\n  findCoordsAndCallAPIs = () => {\r\n    navigator.geolocation.getCurrentPosition((position) => {\r\n      this.setState({\r\n        coords: {\r\n          lat: position.coords.latitude,\r\n          lon: position.coords.longitude\r\n        }\r\n      })\r\n      this.bringLocationAddress();\r\n      this.bringWeatherData();\r\n    })\r\n  }\r\n\r\n  bringWeatherData = () => {\r\n    let coords = this.state.coords;         //repeating code\r\n    const options = {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(coords)\r\n    }\r\n\r\n    fetch(`/api/coords`, options)\r\n      .then(response => response.json())\r\n      .then(infoWeather => {\r\n        console.log(infoWeather);\r\n        this.setState({ infoWeatherReceived: true, infoWeather })\r\n      });\r\n  }\r\n\r\n  bringLocationAddress = () => {\r\n    let coords = this.state.coords;         //repeating code\r\n    const options = {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(coords)\r\n    }\r\n    fetch(`/api/locationAddress`, options)\r\n      .then(response => response.json())\r\n      .then(locationAddress => {\r\n        console.log(locationAddress);\r\n        this.setState({ locationAddressReceived: true, locationAddress })\r\n      })\r\n  }\r\n\r\n  render() {\r\n    if (!this.state.infoWeatherReceived || !this.state.locationAddressReceived) {\r\n      return (\r\n        <div className={styles.loadingButtonContainer}>\r\n          <Button variant=\"contained\" color=\"primary\" onClick={() => { this.bringWeatherData(); this.bringLocationAddress() }}>Loading Weather ...</Button>\r\n        </div>\r\n      )\r\n    }\r\n    else {\r\n      return (\r\n        <Box>\r\n          <p>\r\n            <LocationCard title=\"Location\" data={`${this.state.locationAddress.town}, ${this.state.locationAddress.county}`} />\r\n          </p>\r\n          <WeatherInformation data={this.state.infoWeather} />\r\n          <Box mb={2} onClick={this.sliderMouseDown} >\r\n            <HourlyWeatherInformation\r\n              className={horizontalScrollBarStyle}\r\n              data={this.state.infoWeather}\r\n            />\r\n          </Box>\r\n          <div className={styles.refreshButtonContainer}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={() => { this.bringWeatherData(); this.bringLocationAddress() }}\r\n              mb={2}>\r\n              Refresh\r\n          </Button>\r\n          </div>\r\n        </Box>\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nexport default Coords;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport Header from './components/header.js';\r\nimport Coords from './components/coords.js';\r\n\r\n\r\nimport Container from '@material-ui/core/Container';\r\n\r\n\r\nconst App = () => {\r\n  return (\r\n  <Container maxWidth=\"sm\">\r\n    <Header />\r\n    <Coords />\r\n  </Container>  \r\n  )              \r\n}\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}