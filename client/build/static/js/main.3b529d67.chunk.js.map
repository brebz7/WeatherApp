{"version":3,"sources":["components/CSS/comps.module.css","components/header.js","components/weatherCard.js","components/weatherInformation.js","components/hourlyWeatherInformation.js","components/locationCard.js","components/refreshButton.js","components/loadingWeatherCard.js","components/body.js","index.js"],"names":["module","exports","coordsText","weatherText","loadingButtonContainer","refreshButtonContainer","useStyles","makeStyles","root","flexGrow","typography","alignItems","SimpleAppBar","classes","react_default","a","createElement","className","AppBar","position","color","Toolbar","Typography","variant","align","card","flex","title","fontSize","pos","marginBottom","WeatherCard","_ref","data","Grid","item","md","xs","Card","CardContent","gutterBottom","component","WeatherInformation","currently","Box","container","spacing","summary","concat","temperature","toFixed","pressure","humidity","visibility","windSpeed","theme","width","marginTop","overflowX","table","minWidth","HourlyWeatherInformation","time","hourly","hourlyWeatherDataArray","i","push","styles","horizontalScrollBarStyle","mb","Paper","Table","TableBody","TableRow","map","hourlyWeatherData","TableCell","key","textAlign","LocationCard","address","filter","addrCateg","slice","toString","replace","createAddress","mt","RefreshButton","props","Button","onClick","LoadingWeatherCard","Body","state","coords","infoWeatherReceived","infoWeather","locationAddressReceived","locationAddress","findCoordsAndCallAPIs","navigator","geolocation","getCurrentPosition","_this","setState","lat","latitude","lon","longitude","fetchDataAndSetState","location","options","method","headers","Content-Type","body","JSON","stringify","fetch","then","response","json","this","locationCard","weatherInformation","hourlyWeatherInformation","refreshButton","loadingWeatherCard","Component","ReactDOM","render","Container","maxWidth","document","getElementById"],"mappings":"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","file":"static/js/main.3b529d67.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"coordsText\":\"comps_coordsText__3106e\",\"weatherText\":\"comps_weatherText__3iwyp\",\"loadingButtonContainer\":\"comps_loadingButtonContainer__1GLpu\",\"refreshButtonContainer\":\"comps_refreshButtonContainer__29zmq\"};","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  typography: {\r\n    alignItems: 'center'\r\n  }\r\n});\r\n\r\nexport default function SimpleAppBar() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" color=\"primary\" className={classes.typography}>\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" color=\"inherit\" align=\"center\">\r\n            WEATHER\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles({\r\n  card: {\r\n    flex: 1\r\n  },\r\n  title: {\r\n    fontSize: 14\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n});\r\n\r\nexport default function WeatherCard({title, data}) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid item md={6} xs={12} >\r\n      <Card className={classes.card}>\r\n        <CardContent>\r\n          <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n            {title}\r\n          </Typography>\r\n          <Typography variant=\"h5\" component=\"h2\">\r\n            {data}\r\n          </Typography>\r\n        </CardContent>\r\n      </Card>\r\n    </Grid>\r\n  );\r\n}","import React from 'react';\r\nimport WeatherCard from './weatherCard.js';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nconst WeatherInformation = ({ data: { currently } }) => {\r\n  return (\r\n    <Box>\r\n      <Grid container spacing={1} >\r\n        <WeatherCard\r\n          data={currently.summary}\r\n          title={'Summary'} />\r\n        <WeatherCard\r\n          data={`${((currently.temperature - 32) * 5 / 9).toFixed(2)} Â°C`}\r\n          title={'Temperature'} />\r\n        <WeatherCard\r\n          data={`${currently.pressure} pHa`}\r\n          title={'Pressure'} />\r\n        <WeatherCard\r\n          data={`${currently.humidity} %`}\r\n          title={'Humidity'} />\r\n        <WeatherCard\r\n          data={`${(currently.visibility * 1.6).toFixed(2)} Km`}\r\n          title={'Visibility'} />\r\n        <WeatherCard\r\n          data={`${(currently.windSpeed * 1.6).toFixed(2)} Km/h`}\r\n          title={'Wind Speed'} />\r\n      </Grid>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default WeatherInformation;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport styles from './CSS/horizontalScrollBar.module.css';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(3),\r\n    overflowX: 'auto',\r\n  },\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n}));\r\n\r\nfunction createTimeAndTempObj(time, temperature) {\r\n  return { time, temperature }\r\n}\r\n\r\nconst HourlyWeatherInformation = ({ data: { hourly } }) => {\r\n  const classes = useStyles();\r\n  const hourlyWeatherDataArray = [];\r\n  for (let i = 1; i <= 24; i++)\r\n    hourlyWeatherDataArray.push(createTimeAndTempObj(hourly.data[i].time, hourly.data[i].temperature));\r\n\r\n  return (\r\n    <div className={styles.horizontalScrollBarStyle}>\r\n      <Box mb={2}>\r\n        <Paper className={classes.root}>\r\n          <Table className={classes.table}>\r\n            {<TableBody>\r\n              <TableRow>\r\n                {hourlyWeatherDataArray.map((hourlyWeatherData, i) => (\r\n                  <TableCell key={i}>{hourlyWeatherData.time}</TableCell>\r\n                ))}\r\n              </TableRow>\r\n              <TableRow>\r\n                {hourlyWeatherDataArray.map((hourlyWeatherData, i) => (\r\n                  <TableCell key={i}>{hourlyWeatherData.temperature}</TableCell>\r\n                ))}\r\n              </TableRow>\r\n            </TableBody>}\r\n          </Table>\r\n        </Paper>\r\n      </Box>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HourlyWeatherInformation;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport Box from '@material-ui/core/Box';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles({\r\n  card: {\r\n    flex: 1\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n    textAlign: 'center'\r\n  },\r\n  data: {\r\n    textAlign: 'center'\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n});\r\n\r\nfunction createAddress(data) {\r\n  let address = data\r\n    .filter(addrCateg => addrCateg ? addrCateg : null)\r\n    .slice(0, 3)\r\n    .toString()\r\n    .replace(/,/g, ', ');\r\n    \r\n  return address;\r\n};\r\n\r\nconst LocationCard = ({ title, data }) => {\r\n  const classes = useStyles();\r\n  const address = createAddress(data);\r\n\r\n  return (\r\n    <Box mt={1} mb={2}>\r\n      <Card className={classes.card}>\r\n        <CardContent>\r\n          <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n            {title}\r\n          </Typography>\r\n          <Typography className={classes.data} variant=\"h5\" component=\"h2\">\r\n            {address}\r\n          </Typography>\r\n        </CardContent>\r\n      </Card>\r\n    </Box>\r\n\r\n  );\r\n};\r\n\r\nexport default LocationCard;","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport styles from './CSS/comps.module.css';\r\n\r\nconst RefreshButton = (props) => {\r\n  return (\r\n    <div className={styles.refreshButtonContainer}>\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        onClick={props.onClick}\r\n        mb={2}>\r\n        Refresh\r\n    </Button>\r\n    </div>\r\n\r\n  );\r\n\r\n}\r\n\r\nexport default RefreshButton;\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport styles from './CSS/comps.module.css';\r\n\r\nconst LoadingWeatherCard = () => {\r\n  return (\r\n    <div className={styles.loadingButtonContainer}>\r\n      <Button variant=\"contained\" color=\"primary\">Loading Weather ...</Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoadingWeatherCard;","import React, { Component } from 'react';\r\n\r\nimport Box from '@material-ui/core/Box';\r\nimport WeatherInformation from './weatherInformation';\r\nimport HourlyWeatherInformation from './hourlyWeatherInformation';\r\nimport LocationCard from './locationCard';\r\nimport RefreshButton from './refreshButton';\r\nimport LoadingWeatherCard from './loadingWeatherCard';\r\n\r\nclass Body extends Component {\r\n  state = {\r\n    coords: {},\r\n    infoWeatherReceived: false,\r\n    infoWeather: '',\r\n    locationAddressReceived: false,\r\n    locationAddress: ''\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.findCoordsAndCallAPIs();\r\n  }\r\n\r\n  findCoordsAndCallAPIs = () => {\r\n    navigator.geolocation.getCurrentPosition((position) => {\r\n      this.setState({\r\n        coords: {\r\n          lat: position.coords.latitude,\r\n          lon: position.coords.longitude\r\n        }\r\n      })\r\n      this.fetchDataAndSetState('/api/infoWeather');\r\n      this.fetchDataAndSetState('/api/locationAddress');\r\n    })\r\n  }\r\n\r\n  fetchDataAndSetState = (location) => {\r\n    let { coords } = this.state;\r\n    const options = {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(coords)\r\n    }\r\n    fetch(location, options)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        if (location === '/api/infoWeather')\r\n          this.setState({ infoWeatherReceived: true, infoWeather: data });\r\n        else if (location === '/api/locationAddress')\r\n          this.setState({ locationAddressReceived: true, locationAddress: data });\r\n      })\r\n  }\r\n\r\n  render() {\r\n    if (!this.state.infoWeatherReceived || !this.state.locationAddressReceived) {\r\n      return <LoadingWeatherCard />\r\n    }\r\n    else {\r\n      return (\r\n        <Box>\r\n          <LocationCard mb={5} title=\"Location\" data={this.state.locationAddress} />\r\n          <WeatherInformation data={this.state.infoWeather} />\r\n          <HourlyWeatherInformation data={this.state.infoWeather} />\r\n          <RefreshButton onClick={this.findCoordsAndCallAPIs} />\r\n        </Box>\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nexport default Body;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport Container from '@material-ui/core/Container';\r\nimport Header from './components/header.js';\r\nimport Body from './components/body.js';\r\n\r\nconst App = () => {\r\n  return (\r\n  <Container maxWidth=\"sm\">\r\n    <Header />\r\n    <Body />\r\n  </Container>  \r\n  )              \r\n}\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}